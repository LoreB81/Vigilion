openapi: 3.0.0

info: 
  title: Vigilion API
  description: API per la web app Vigilion
  version: 1.0.0

servers:
  - url: http://localhost:8000/api
    description: Localhost server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - id
        - firstname
        - lastname
        - email
        - password
        - district
      properties:
        id:
          type: string
          description: UUID dell'utente
        firstname:
          type: string
          description: Nome dell'utente
        lastname:
          type: string
          description: Cognome dell'utente
        email:
          type: string
          description: Email dell'utente
        password:
          type: string
          description: Password dell'utente
        district:
          type: string
          enum: [Gardolo, Meano, Bondone, Sardagna, Ravina-Romagnano, Argentario, Povo, Mattarello, Villazzano, Oltrefersina, San Giuseppe-Santa Chiara, Centro Storico-Piedicastello]
          description: Circoscrizione di residenza dell'utente
        notifications:
          type: array
          description: Array contenente le circoscrizioni da cui l'utente riceverà notifiche
        warned:
          type: boolean
          description: Valore booleano che indica se l'utente è stato ammonito per l'utilizzo della piattaforma
        blocked:
          type: boolean
          description: Valore booleano che indica se l'utente è stato bandito dalla creazione di segnalazioni
        admin:
          type: boolean
          description: Valore booleano che indica se l'utente è amministratore
        feedbacks:
          type: array
          description: Lista dei feedback inviati dall'utente
          items:
            type: object
            properties:
              text:
                type: string
                description: Testo del feedback
              date:
                type: string
                description: Data di invio del feedback (formato yyyy-mm-dd)
    Report:
      type: object
      required:
        - user
        - typology
        - notes
        - location
        - district
      properties:
        id:
          type: integer
          description: ID autogenerato incrementale della segnalazione
        user:
          type: string
          description: UUID dell'utente che ha creato la segnalazione
        typology:
          type: string
          enum: [Furto, Aggressione, Molestia, Soggetto armato, Soggetto alterato, Altro]
          description: Tipologia della segnalazione
        notes:
          type: string
          description: Descrizione della segnalazione
        location:
          type: string
          description: Posizione della segnalazione (latitudine/longitudine)
        district:
          type: string
          enum: [Gardolo, Meano, Bondone, Sardagna, Ravina-Romagnano, Argentario, Povo, Mattarello, Villazzano, Oltrefersina, San Giuseppe-Santa Chiara, Centro Storico-Piedicastello]
          description: Circoscrizione in cui la segnalazione è stata effettuata
        upvote:
          type: integer
          description: Numero di upvote ricevuti
        downvote:
          type: integer
          description: Numero di downvote ricevuti
        createdtime:
          type: string
          description: Data e ora di creazione della segnalazione (formato yyyy-mm-dd HH:ii)
    Vote:
      type: object
      required:
        - user
        - report
        - voteType
      properties:
        user:
          type: string
          description: UUID dell'utente
        report:
          type: integer
          description: ID della segnalazione
        voteType:
          type: string
          enum: [upvote, downvote]
          description: Tipologia di voto
        createdAt:
          type: string
          format: date-time
          description: Data ed ora del voto
  responses:
    Created:
      description: Risorsa creata
    NotFound:
      description: Risorsa non trovata
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Risorsa non trovata
    BadRequest:
      description: Richiesta non valida
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Parametri non validi
    Unauthorized:
      description: L'utente non è autorizzato a compiere questa azione
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Utente non autorizzato
    ServerError:
      description: Errore del server
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                description: Tipologia di errore
              details:
                type: string
                description: Dettagli dell'errore

paths:
  /authentication:
    post:
      summary: Autenticazione dell'utente
      description: Autentica l'utente e ritorna il token JWT in un cookie apposito
      requestBody:
        description: Credenziali per l'autenticazione (email e password)
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  description: Email dell'utente
                password:
                  type: string
                  description: Password dell'utente
      responses:
        "200":
          description: Token creato e salvato nei cookie
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True se l'autenticazione è riuscita, false altrimenti
                  token:
                    type: string
                    description: Token JWT per l'autenticazione
        "404":
          description: Utente non trovato con le credenziali fornite
          $ref: '#/components/responses/NotFound'

  /authentication/logout:
    post:
      summary: Logout dell'utente
      description: Effettua il logout dell'utente cancellando il cookie di autenticazione ed il cookie contenente l'ID dell'utente
      responses:
        "200":
          description: Logout effettuato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True se il logout è riuscito
                  message:
                    type: string
                    description: Messaggio di conferma del Logout

  /authentication/check:
    get:
      summary: Verifica autenticazione
      description: Verifica se l'utente è autenticato controllando il cookie di autenticazione
      responses:
        "200":
          description: Stato dell'autenticazione
          content:
            application/json:
              schema:
                type: object
                properties:
                  authenticated:
                    type: boolean
                    description: True se l'utente è autenticato
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        description: Email dell'utente autenticato
                      id:
                        type: string
                        description: ID dell'utente autenticato
        "400":
          description: Token non trovato nei cookie
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Errore nella verifica del token
          $ref: "#/components/responses/Unauthorized"

  /districts:
    get:
      summary: Espone il file circoscrizioni.geojson alle pagine frontend
      responses:
        "200":
          description: File contenente i poligoni che rappresentano le circoscrizioni del comune di Trento
          content:
            application/geo+json:
              schema:
                type: array
        "404":
          description: File non trovato
          $ref: "#/components/responses/NotFound"

  /users/feedbacks:
    get:
      summary: Recupera la lista di feedback degli utenti
      description:
        Restituisce la lista di tutti i feedback inviati dagli utenti, ciascuno con nome, cognome, testo e data di creazione, ordinati per data decrescente.
        È possibile filtrare i feedback tramite parametri opzionali di data inizio (startDate) e data fine (endDate) nel formato yyyy-mm-dd.
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: false
          description: Data di inizio (inclusiva) per filtrare i feedback (formato yyyy-mm-dd)
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: false
          description: Data di fine (inclusiva) per filtrare i feedback (formato yyyy-mm-dd)
      responses:
        "200":
          description: Lista dei feedback degli utenti
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    firstname:
                      type: string
                      description: Nome dell'utente
                    lastname:
                      type: string
                      description: Cognome dell'utente
                    text:
                      type: string
                      description: Testo del feedback
                    date:
                      type: string
                      format: date
                      description: Data di invio del feedback (formato yyyy-mm-dd)
        "500":
          $ref: "#/components/responses/ServerError"

  /users/{id}:
    summary: Rappresentazione di un utente
    description: La risorsa rappresenta un utente univocamente. Ogni utente è identificato da un id.
    get: 
      summary: Ritorna il singolo utente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: UUID dell'utente
      responses:
        "200":
          description: Singolo utente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"
  
  /users/{id}/name:
    get:
      summary: Restituisce solo nome e cognome dell'utente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID dell'utente
      responses:
        "200":
          description: Nome e cognome dell'utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstname:
                    type: string
                  lastname:
                    type: string
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /users:
    summary: Rappresentazione della lista di utenti
    description: In chiamata GET ritorna la lista di tutti gli utenti registrati, in POST crea un nuovo utente
    get:
      summary: Lista degli utenti
      responses:
        "200":
          description: Lista degli utenti
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: Nessun utente trovato
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"
    post:
      summary: Crea un nuovo utente
      requestBody:
        description: Utente da creare
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Utente creato
          $ref: "#/components/responses/Created"
        "400":
          description: Email o password non valide, oppure email già utilizzata
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"
  
  /users/send-feedback:
    post:
      summary: Invia un feedback
      description: Permette all'utente autenticato di inviare un feedback che verrà aggiunto al proprio profilo.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - text
              properties:
                text:
                  type: string
                  description: Testo del feedback
      responses:
        "200":
          description: Feedback inviato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True se il feedback è stato inviato
                  message:
                    type: string
                    description: Messaggio di conferma
        "400":
          description: Testo del feedback mancante o non valido
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Utente non autenticato
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: Utente non trovato
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /users/change-password:
    post:
      summary: Modifica la password dell'utente
      description: Modifica la password dell'utente autenticato, verificando prima la vecchia password
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                  description: Vecchia password dell'utente
                newPassword:
                  type: string
                  description: Nuova password dell'utente
      responses:
        "200":
          description: Password modificata con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True se la modifica è riuscita
                  message:
                    type: string
                    description: Messaggio di conferma
        "400":
          description: Password non valida o non corrispondente
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Utente non autenticato
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: Utente con UUID recuperato dai cookie non trovato
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /users/change-district:
    post:
      summary: Modifica la circoscrizione dell'utente
      description: Modifica la circoscrizione dell'utente autenticato
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - district
              properties:
                district:
                  type: string
                  description: Nuova circoscrizione dell'utente
      responses:
        "200":
          description: Circoscrizione modificata con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True se la modifica è riuscita
                  message:
                    type: string
                    description: Messaggio di conferma
        "400":
          description: Circoscrizione non valida
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Utente non autenticato
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: Utente con UUID recuperato dai cookie non trovato
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /users/change-email:
    post:
      summary: Modifica l'email dell'utente
      description: Modifica l'email dell'utente autenticato, verificando prima la vecchia email
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldEmail
                - newEmail
              properties:
                oldEmail:
                  type: string
                  description: Vecchia email dell'utente
                newEmail:
                  type: string
                  description: Nuova email dell'utente
      responses:
        "200":
          description: Email modificata con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True se la modifica è riuscita
                  message:
                    type: string
                    description: Messaggio di conferma
        "400":
          description: Email non valida o non corrispondente
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Utente non autenticato
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: Utente con UUID recuperato dai cookie non trovato
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /users/change-notifications:
    post:
      summary: Modifica le circoscrizioni di notifica dell'utente
      description: Modifica le circoscrizioni per cui l'utente autenticato desidera ricevere notifiche
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notifications
              properties:
                notifications:
                  type: array
                  items:
                    type: string
                  description: Lista delle circoscrizioni per cui ricevere notifiche
      responses:
        "200":
          description: Notifiche aggiornate con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: True se la modifica è riuscita
                  message:
                    type: string
                    description: Messaggio di conferma
        "400":
          description: Parametri non validi
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Utente non autenticato
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: Utente con UUID recuperato dai cookie non trovato
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /users/{id}/warn:
    patch:
      summary: Ammonisci un utente
      description: Permette ad un amministratore di ammonire un utente (imposta warned = true)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID dell'utente da ammonire
      responses:
        "200":
          description: Utente ammonito con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "403":
          description: Solo gli amministratori possono ammonire un utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Utente non trovato
          $ref: "#/components/responses/NotFound"

  /users/{id}/ban:
    patch:
      summary: Bandisci un utente
      description: Permette ad un amministratore di bannare un utente (imposta blocked = true)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID dell'utente da bannare
      responses:
        "200":
          description: Utente bannato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "403":
          description: Solo gli amministratori possono bandire un utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Utente non trovato
          $ref: "#/components/responses/NotFound"

  /users/{id}/reactivate:
    patch:
      summary: Riattiva un utente
      description: Permette ad un amministratore di riattivare un utente (imposta blocked = false, warned = false)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID dell'utente da riattivare
      responses:
        "200":
          description: Utente riattivato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "403":
          description: Solo gli amministratori possono riattivare un utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Utente non trovato
          $ref: "#/components/responses/NotFound"

  /users/delete-account:
    delete:
      summary: Elimina l'account dell'utente
      description: Permette all'utente autenticato di eliminare il proprio account dal database. Le segnalazioni e i voti associati rimangono salvati.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Account eliminato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: "True se l'eliminazione è riuscita"
                  message:
                    type: string
                    description: Messaggio di conferma
        "401":
          description: Utente non autenticato
          $ref: "#/components/responses/Unauthorized"
        "404":
          description: Utente non trovato
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /reports:
    summary: Gestione delle segnalazioni
    description: Creazione in POST di una nuova segnalazione e restituzione in GET di tutte le segnalazioni
    post:
      summary: Creazione nuova segnalazione
      security:
        - bearerAuth: []
      requestBody:
        description: Segnalazione da creare
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Report"
      responses:
        "201":
          $ref: "#/components/responses/Created"
          description: Segnalazione creata
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          description: La segnalazione non appartiene ad alcuna circoscrizione
    get:
      summary: Lista delle segnalazioni
      responses:
        "200":
          description: Lista delle segnalazioni
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "404":
          description: Nessuna segnalazione trovata
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /reports/latest:
    summary: Ultime 5 segnalazioni
    description: Recupera le ultime 5 segnalazioni ordinate per data di creazione
    get:
      summary: Ultime 5 segnalazioni
      responses:
        "200":
          description: Lista delle ultime 5 segnalazioni
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "404":
          description: Nessuna segnalazione trovata
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /reports/{id}:
    summary: Rappresentazione di una segnalazione
    description: La risorsa rappresenta una segnalazione univocamente.
    get: 
      summary: Ritorna la singola segnalazione
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID della segnalazione
      responses:
        "200":
          description: Singola segnalazione
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Report"
        "404":
          description: Segnalazione non trovata
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /reports/filtered:
    post:
      summary: Filtra le segnalazioni
      description: Recupera le segnalazioni filtrate per data, circoscrizione e tipologia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  description: Data di inizio del periodo (YYYY-MM-DD)
                endDate:
                  type: string
                  format: date
                  description: Data di fine del periodo (YYYY-MM-DD)
                district:
                  type: string
                  description: Circoscrizione di riferimento
                typology:
                  type: string
                  enum: [Furto, Aggressione, Molestia, Soggetto armato, Soggetto alterato, Altro]
                  description: Tipologia della segnalazione
      responses:
        "200":
          description: Lista delle segnalazioni filtrate
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "204":
          description: Nessuna segnalazione trovata
        "500":
          $ref: "#/components/responses/ServerError"

  /reports/by-districts:
    post:
      summary: Recupera segnalazioni per circoscrizioni
      description: Recupera le segnalazioni filtrate per una o più circoscrizioni, ordinate per data di creazione decrescente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - districts
              properties:
                districts:
                  type: array
                  items:
                    type: string
                  description: Lista delle circoscrizioni per cui recuperare le segnalazioni
      responses:
        "200":
          description: Lista delle segnalazioni filtrate per circoscrizioni
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Report"
        "204":
          description: Nessuna segnalazione da notificare
        "400":
          description: Parametri non validi
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/ServerError"

  /reports/{id}/vote:
    post:
      summary: Vota una segnalazione
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID della segnalazione
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - voteType
              properties:
                voteType:
                  type: string
                  enum: [upvote, downvote]
                  description: Tipo di voto
      responses:
        "200":
          description: Voto registrato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  upvotes:
                    type: integer
                    description: Numero di upvote
                  downvotes:
                    type: integer
                    description: Numero di downvote
                  userVote:
                    type: string
                    enum: [upvote, downvote, null]
                    description: Voto dell'utente corrente
        "400":
          description: Tipologia di voto non valida
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Utente non autenticato
          $ref: '#/components/responses/Unauthorized'
        "404":
          description: Segnalazione non trovata
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/ServerError"

  /reports/{id}/user-vote:
    get:
      summary: Ottieni il voto dell'utente per una segnalazione
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID della segnalazione
      responses:
        "200":
          description: Voto dell'utente
          content:
            application/json:
              schema:
                type: object
                properties:
                  voteType:
                    type: string
                    enum: [upvote, downvote, null]
                    description: Tipo di voto dell'utente
        "401":
          description: Utente non autenticato
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: "#/components/responses/ServerError"